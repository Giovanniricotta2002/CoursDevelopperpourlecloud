apiVersion: v1
kind: Namespace
metadata:
  name: app
---

# Deployment app
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app
  namespace: app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: app
  template:
    metadata:
      labels:
        app: app
    spec:
      containers:
      - name: app
        image: cours
        ports:
        - containerPort: 80
        volumeMounts:
        - name: app-volume
          mountPath: /var/www/app
        - name: localtime
          mountPath: /etc/localtime
          readOnly: true
      volumes:
      - name: app-volume
        hostPath:
          path: ${APP_DIR} # Remplacer par chemin valide sur le noeud
          type: Directory
      - name: localtime
        hostPath:
          path: /etc/localtime
          type: File
---

# Service app
apiVersion: v1
kind: Service
metadata:
  name: app-service
  namespace: app
spec:
  selector:
    app: app
  ports:
  - port: 80
    targetPort: 80
    nodePort: ${APP_PORT} # Remplacer par port valide (30000-32767)
  type: NodePort
---

# Deployment bdd
apiVersion: apps/v1
kind: Deployment
metadata:
  name: bdd
  namespace: app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: bdd
  template:
    metadata:
      labels:
        app: bdd
    spec:
      containers:
      - name: bdd
        image: postgres:15.8-bookworm
        env:
        - name: POSTGRES_DB
          value: "cours1"
        - name: POSTGRES_USER
          value: "cours1"
        - name: POSTGRES_PASSWORD
          value: "cours1"
        ports:
        - containerPort: 5432
        volumeMounts:
        - name: bdd-data
          mountPath: /var/lib/postgresql/data
        - name: localtime
          mountPath: /etc/localtime
          readOnly: true
      volumes:
      - name: bdd-data
        hostPath:
          path: ${BDD_DIR} # Remplacer par chemin valide sur le noeud
          type: Directory
      - name: localtime
        hostPath:
          path: /etc/localtime
          type: File
---

# Service bdd
apiVersion: v1
kind: Service
metadata:
  name: bdd-service
  namespace: app
spec:
  selector:
    app: bdd
  ports:
  - port: 5432
    targetPort: 5432
    nodePort: ${BDD_PORT} # Remplacer par port valide (30000-32767)
  type: NodePort
---

# Kubernetes Dashboard ServiceAccount
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kubernetes-dashboard
  namespace: app
---

# Kubernetes Dashboard ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kubernetes-dashboard
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: kubernetes-dashboard
  namespace: app
---

# Kubernetes Dashboard Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    k8s-app: kubernetes-dashboard
  name: kubernetes-dashboard
  namespace: app
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: kubernetes-dashboard
  template:
    metadata:
      labels:
        k8s-app: kubernetes-dashboard
    spec:
      serviceAccountName: kubernetes-dashboard
      containers:
      - name: kubernetes-dashboard
        image: kubernetesui/dashboard:v2.7.0
        ports:
        - containerPort: 8443
          protocol: TCP
        args:
        - --auto-generate-certificates
        volumeMounts:
        - mountPath: /certs
          name: kubernetes-dashboard-certs
          readOnly: true
      volumes:
      - name: kubernetes-dashboard-certs
        emptyDir: {}
---

# Kubernetes Dashboard Service
apiVersion: v1
kind: Service
metadata:
  labels:
    k8s-app: kubernetes-dashboard
  name: kubernetes-dashboard
  namespace: app
spec:
  ports:
  - port: 443
    targetPort: 8443
    nodePort: 32000
  selector:
    k8s-app: kubernetes-dashboard
  type: NodePort
